***STYLING REACT COMPONENTS WITH CSS MODULES
Sometimes, you would want to limit the CSS stylesheet approach to hold your global styles and then scope your component styles locally.

CSS Modules allows us to do that. It eliminates the risk of name conflicts associated with the CSS selector or some other issues related to the global scope styling.

For instance, if you add a CSS Module for the TodoItem component, the styles applied will be scoped only to that component. This way, you can use the same class names in different components without worrying about conflicts with the CSS selector.

So what did we do?
First, we tell React to process the CSS file as a CSS module by appending to the file .module.css. This module is then imported in the TodoItem.js file and declared as a JavaScript object called styles.

This object holds all the class selector in the .css file, and we referenced them in the JSX className attribute with styles.classSelector (for instance, styles.checkbox).

Please note:

You can name the styles object anything you want. Also, note how you name a class with more than one word (e.g .new-class). For this, it is recommended you use camelCase (i.e .newClass). But if you prefer to have a hyphen in your class selector, then you should use the bracket notation (for instance, styles['new-class']) to reference the selector inside the .js file.

Now, if you inspect the todos list in your browser developer tools, you’ll see that the CSS module generates unique class names. With this, you don’t have to worry about selector name conflicts.


***USING SASS
For those of us who would like to use Sass to compile an .scss file to regular CSS. All you have to do is to install node-sass like so:

npm install node-sass

That is all.

If you like, you can use CSS Modules with Sass. Just change the .css file extension to .scss


***ADDING STYLES WHEN ANY OF THE TODOS ITEMS ARE COMPLETED
In the code, we introduced a new tag, span and then added a style attribute to it. We also used the ternary operator in the style attribute to dynamically change the CSS style if any of the todos item(s) is/are completed.
